.. This may look like plain text, but is really -*- rst -*-
.. $Id$

restindex	
    crumb: Geometry
    format: rest
    page-title: Create 3D Geometry
    encoding: utf-8
    output-encoding: None
    initialheaderlevel: 2
/restindex
  
Creating spatial structures
===========================
  
Hesperia dome
-------------

The Hesperia dome is a enormous construction made of glass on top of a
hotel in Barcelona. A parametric 3D model of this dome was created
with pyFormex, which allows to evaluate geometric variations changing
one or more parameters (e.g. the span or height of a dome, the amount
of secondary triangles, etc.) as shown in the figure below. As
illustrated, geometries can be displayed in several ways
(e.g. wireframe, flat, smooth, transparent). Automated generation of
finite element input files can be incorporated in pyFormex.

.. image:: ../images/hesperia3.jpg
   :align: center

  
Hyparcap
--------

A space frame in the form of a five-pointed star of hypars.

.. image:: ../images/Hyparcap.png
   :align: center


Scallop dome
------------

Example showing the parametric capabilities of pyFormex. Both domes
are createdby the same small script, by only changing two parameters.

.. image:: ../images/scallop8.png
   :align: center

.. image:: ../images/scallop12.png
   :align: center


SpaceTrussRoof
--------------

A space truss used for the roof of an industrial building. Click on
the picture to view a large size animated gif.

.. image:: ../images/roof-movie.gif
   :align: center


Geodesic Dome
-------------

This example illustrates the use of surface elements. It shows four
steps in the creation of a geodesic dome.

.. image:: ../images/Geodesic-1.png
   :align: center

First we create two triangles. We give them different colors so that
they are easy to distinguish::

   v=0.5*sqrt(3.)
   a = Formex([[[0,0],[1,0],[0.5,v]]],1)
   aa = Formex([[[1,0],[1.5,v],[0.5,v]]],2)

.. image:: ../images/Geodesic-2.png
   :align: center

Next we copy the triangles a number of times in two directions,
generating the triangular pattern at the left::

   m=5; n=5; d = a.replic2(m,min(m,n),1.,v,bias=0.5,taper=-1) dd =
   aa.replic2(m-1,min(m-1,n),1.,v,bias=0.5,taper=-1) </pre> </td>

.. image:: ../images/Geodesic-3.png
   :align: center

Then we copy-rotate the pattern into a hexagon::

    e = (d+dd).rosette(6,60,point=[m*0.5,m*v,0])

.. image:: ../images/Geodesic-4.png
   :align: center

Lastly the pattern is mapped on a sphere, resulting in a geodesic dome
from which we give a perspective view::

   f = e.mapd(2,lambda d:0.8*sqrt((m+1)**2-d**2),e.center(),[0,1]) 


Creating stent geometries
=========================

Wire stent
----------

A single layered (top) and a double layered (bottom) wire stent. Both
are generated by the script below.

.. image:: ../images/WireStent.png
   :align: center


{colorize;../scripts/wirestent.py} 


Balloon expandable stent
------------------------

pyFormex can be used for the parametric design of balloon expandable
stents. As illustrated below, both the geometric design and the mesh
can easily be modified.

.. image:: ../images/BalloonExpandableStent1.png
   :align: center

.. image:: ../images/BalloonExpandableStent2.png
   :align: center

.. End
