#!/usr/bin/env python
# $Id$
"""pyformex is a python implementation of Formex algebra"""

import globaldata as GD
from gui import runApp

from colors import *    # needed for reading config file
  # We should move this to a module
import sys
import os.path
from optparse import OptionParser,make_option

###########################  main  ################################


def main(argv=None):
    """This is a fairly generic main() function.

    It is responsible for reading the configuration file(s),
    processing the command line options and starting the application.
    """
    # this allows us to call main from the interpreter
    if argv is None:
        argv = sys.argv
    # set the path to the pyformex files
    config = GD.config
    config['pyformexdir'] = os.path.dirname(os.path.realpath(argv[0]))
    # Read the default config file
    f = os.path.join(config['pyformexdir'],"pyformexrc")
    execfile(f)
    #process options
    parser = OptionParser(
        usage = "usage: %prog [<options>] [ --  <Qapp-options> ]",
        version = GD.Version,
        option_list=[
        make_option("--nodri", help="do not use Direct Rendering",
                    action="store_false", dest="dri", default=True),
        make_option("--debug", help="display logging info to sys.stdout",
                    action="store_true", dest="debug", default=False)
        ])
    GD.options, args = parser.parse_args()
    # Read the available config files
    for f in ["/etc/pyformexrc", \
              os.path.join(os.environ['HOME'],".pyformexrc"), \
              ".pyformexrc", ]:
        if os.path.exists(f):
            execfile(f)
            break
    # Run the application
    return runApp(args)

#### Go

if __name__ == "__main__":
    sys.exit(main())

#### End
