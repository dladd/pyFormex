.. TODO file for the pyFormex project            -*- rst -*-

pyFormex TODO list
==================

Here is a list of the planned new features, enhancements and changes that we
want to implement in future releases. 
There is no guarantee that the tasks mentioned here will indeed be completed
in due time (if ever!). It is mainly intended for the developers, to see who is
working on what.

Tasks arge grouped by the release number where we aim to have them
implemented, but may often get shifted to a later or earlier relese.

Each task can have the following keys:

:dev(eloper): Who is already working on that task.

:sta(tus): In what status is the task: idea, proof of concept,
   partially implemented, done
 
:rem(arks): Anything about the task that is worthwile sharing with others.


Release 0.9
-----------

**Add Layers to the rendering engine**
  :sta: IDEA

**Create Spline Surface class, based on Spline curves**
  :dev: bverheg
  :sta: Proof Of Concept
  :rem: See the `SplineSurface` example

**Add Nurbs curves and surfaces**
  :dev: bverheg
  :sta: Curves mostly implemented, surfaces under development

**Add faceted surfaces**
  :dev: bverheg
  :sta: idea
  :rem: A faceted surface where the facets can be any convex flat polygon.

**Add quad based surfaces**
  :sta: idea
  :rem: Could be based on SplineSurface, which is then divided in quads.
    An unstructured quad mesher for more complex surface shapes could be
    based on subdivision.
     
**Zoom center**
  :sta: idea
  :rem: setting a center point for the interactive zoom functions,
    which may be different from the viewpoint center

**Default focus**
  :dev: bverheg
  :sta: IDEA
  :rem: Default focus should set camera distance based on the
    largest cross dimension in the shortest viewport direction,
    and use angle zooming to increase the image if the cross
    section is not square and aligned with the viewport.
      
**Faster loading of large STL models (possibly in C)**
  :dev: bverheg
  :sta: PARTIAL
  :rem: Done via external 'gts': transform to GTS format.
    Should be implemented as C function.

**Export models to FEA/CFD simulation codes**
  :dev: bverheg, pmortier, francio
  :sta: There is already wide support for exporting to Abaqus input format.
    Some exporting to Fluent has been done in user applications. Other 
    target codes of interest are: ANSYS,Code-Aster.
      
**Step by step execution of scripts**
  :dev: bverheg
  :sta: Partially implemented via the stepScript() function
  :rem: Only works for simple scripts where each part between draw() 
    instructions can be executed separately.
      
**Display camera settings**
  :rem:  This could be made part of a generalized 'Camera handling'
    plugin which could provide also things like move a camera
    along a path. 
      
**Provide a formian to pyformex translator**
  :rem: There is a formian plugin, allowing to run formian scripts with minor
    changes. At this moment we feel no need to provide a translator.
      
**Derive BBoxActor from GridActor**
      
**Merge the Formex, Surface and Mesh plugin menus**
  :sta: PARTIAL
  :rem: These should be merged into a single Geometry menu.

**Add a GRID option to the canvas**
      
**Create PLANE objects**
  :dev: bverheg
  :sta: PARTIAL
      
**Add an interactive command window to the GUI**
  :dev: bverheg
  :sta: PARTIAL
  :rem: A single command line is available. 

**Replace the timeout functions with a TIMEOUT signal/slot**
      
**Add an interactive Python aware editor widget**
  :rem: This is currently not considered to be important. Most developers
    like to use their own familiar editor (emacs, eric, kedit, gedit). 
    
**Copy viewport defaults to newly added viewports**
  :sta: TODO

**Complete the Coords.fromfile and Formex.fromfile arguments**
      
      
Release 0.9.1
-------------

**Remove the old InputDialog**

**Fix all docstrings for the sphinx system**

**Finish the tutorial and user guide**

**Set up procedures to follow up submitted bugs/questions**

**Create Debian packages**
      
Release 1.0
-----------

**Conquer the world ;)**

.. End
