pyFormex 0.3 - release notes
============================
There are so many new features and enhancements in this release that we just
can not mention them all in this place. 

While the Formex base class has reached a rather stable status, most of the
rest of pyFormex is still very experimental and subject to important changes
on the way to release 1.0.
Lots of features have been added and examples have been included to demonstrate
what pyFormex is all about and what can be done with it. We certainly do not
have a clear idea yet what will eventually be part of pyFormex and what not.
Still, this software is being used intensively now in our research, so most
of its features are likely to stay in future releases, though probably under
the form of pluggable additions. 


Short overview of the most important design and feature changes
===============================================================

- Base -
numarray has been replaced by NumPy as the underlying numerical array class.
Get numpy from http://numeric.scipy.org/ (version 0.9.4 or higher) 

- Configuration -
Configuration files have a new structure. 
Preferences are saved in a user configuration file on exit.

- Using pyFormex withou GUI -
The pyformex command has an option --nogui that lets you execute pyformex
scripts without opening a GUI. 

- Help system -
The GUI has an integrated help system, using either an external or a built-in
browser. Currently, the help system displays the manual.

- Documentation -
Work on a manual/tutorial has started. Accessible from the help system.



Detailed (though incomplete) changes since Release 0.2.2:
=========================================================

pyformex command
----------------
- An option --nogui can be specified to execute pyformex scripts without
  starting the GUI.


pyformex GUI
------------
- File->Open: selects the current file (name displayed in status bar)
- File->Play: plays the current file (if it is a pyFormex script)
- File->Edit: loads the current file in the editor (if an editor was set)
- Selecting an example sets the current file name and plays the script.
- The Toolbar has a Play Button, the Step button has a new icon.


formex.py
---------
- pattern: The pattern function has been extended to quickly create unit grid
  patterns is 3D-space. Some examples are shown in the Pattern example.

- equivalence(x): Finds (nearly) equivalent points in a coordinate array, and 
  returns an array with the unique coordinates and a pointer into this array
  for each point of the input array. This function is used to transform a
  a Formex structure into a more traditional (nodes,elements) structure as
  used in Finite Element models.

- connect(Formexlist): This function is the equivalent of the Formex.connect()
  method, which is now obsoleted and might be removed in future. 

Formex class:
-------------
- numarray was replaed by numpy as the underlying array class
- nodesAndElements() is now a lot faster, thanks to the use of the 
  equivalence() function   
- selectNodes(idx) : new method, selects a subset of nodes from all elements
  in a Formex
- reverseElements(): new method, reverses the order of the nodes.
- rotateAround(): method has now been implemented
- hasProp(): obsoleted, use withProp() instead
- connect(): obsoleted, use function connect() instead.

draw.py:
--------
has been split in two:
- script.py: global functions available when running with --nogui option.
  This includes the basic functionality for executing pyformex scripts without
  drawing functions. It even includes some command line replacements for 
  widgets to allow user interaction.
- draw.py: holds the global functions (directly accessible from scripts) to
  allow OpenGL drawing, as well as some basic user interaction widgets. 


canvas.py:
----------
We started work at implementing 'flat' and 'smooth' rendering modes. Full
functionality of 3D volume rendering is not planned for the 0.4 release.

decorations.py:
---------------
This new module is intended to hold the canvas actors that are drawn in 2D
on the canvas viewport.
This currently includes text and colorlegends.
 

Experimental/Development 
========================
These files hold new and experimental functions. Their contents may be moved
to other files in future releases.


- properties.py : A general framework for collecting and defining sets of
  properties that can be attached to the elements of a Formex through the
  Formex.p attribute.

- file2formex.py: Read the coordinates of a formex from file. Intended to be
  included in formex.py.

- stl.py: Input and output of .stl format files for describing 3D-surfaces by
  means of a closed surface of triangles and normals.

- simple.py: Some simple geometric base patterns for constructing Formices.
  They are based on the pattern() function in formex.py.

- mydict.py: Dictionary type classes with extended functionality. Used by
  properties.

